# selection mode
# Back to indentation     ^
# Clear selection         Escape         
# Copy selection          Enter          
# Cursor down             j              
# Cursor left             h              
# Cursor right            l              
# Cursor to bottom line   L
# Cursor to middle line   M              
# Cursor to top line      H              
# Cursor up               k              
# Delete entire line      d              
# Delete to end of line   D              
# End of line             $              
# Goto line               :              
# Half page down          C-d            
# Half page up            C-u            
# Next page               C-f            
# Next word               w              
# Paste buffer            p              
# Previous page           C-b            
# Previous word           b              
# Quit mode               q              
# Scroll down             C-Down or J    
# Scroll up               C-Up or K      
# Search again            n              
# Search backward         ?              
# Search forward          /              
# Start of line           0              
# Start selection         Space          
#
# Re-assigning C-b to C-a
set-option -g prefix C-a
bind-key a send-prefix
setw -g mode-keys vi
#set-option -g prefix2 C-g
#bind-key g send-prefix -2

#start counting at 1
set -g base-index 1

#many scrollback lines
set -g history-limit 50000

# Last active window
unbind l
bind C-a last-window

#add to the environment vars that automatically get updated
set -ga update-environment " DBUS_SESSION_BUS_ADDRESS GNOME_KEYRING_CONTROL GPG_AGENT_INFO"

#set -g mouse off
set -g default-terminal "xterm-256color"

#toggle status bar with b, can add -q when tmux is updated in debian repo?
bind b set status

bind-key Space next-window
bind-key C-Space next-window
bind-key n next-window
bind-key C-n next-window
bind-key p previous-window
bind-key C-p previous-window
bind-key C-c split-window -p 20

bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"

#bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e pick_url.sh /tmp/tmux-buffer"
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "pick_url.sh /tmp/tmux-buffer"'

set-option -g visual-bell on

bind -n M-k select-pane -U 
bind -n M-j select-pane -D

bind k select-pane -U 
bind j select-pane -D
bind h select-pane -R
bind l select-pane -L

bind-key Up select-pane -U 
bind-key Down select-pane -D
bind-key Right select-pane -R
bind-key Left select-pane -L


bind -n M-k select-pane -U 
bind -n M-j select-pane -D
bind -n M-h select-pane -R
bind -n M-l select-pane -L

bind C-k resize-pane -U 5
bind C-j resize-pane -D 5
bind C-h resize-pane -R 5
bind C-l resize-pane -L 5
bind = select-layout even-vertical

setw -g window-status-current-bg red
set-option -g allow-rename on

set-option -sg escape-time 50
set-window-option -g xterm-keys on # to make ctrl-arrow, etc. work

set-option -g set-titles on
set-option -g set-titles-string 'tm:#S:#T' # use screen title
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

#status line
set -g status-bg black
set -g status-fg yellow
set -g status-left-length 50
set -g status-left '#S %H:%M ' 
set -g status-right "|#(awk 'BEGIN {ORS=\" \"} {print $1,$2,$3}' /proc/loadavg;  cat /proc/acpi/ibm/fan |grep speed | awk '{ print $2 }')"
setw -g window-status-format "#[fg=colour8]#[bg=yellow] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=black]#[fg=yellow] >#I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour2
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse
#setw -g window-status-content-bg colour0
#setw -g window-status-content-fg colour238
#setw -g window-status-content-attr bold,blink,reverse
# set current path equal to current pane path.
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
# bind-key -T vi-copy 'v' begin-selection
# bind-key -T vi-copy 'y' copy-selection
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

set-option -g default-shell /bin/zsh
set-option -g renumber-windows on
# copy to Mac OSX pasteboard
#note, this is async, so it may not be picked up for the first window...
if 'command -v reattach-to-user-namespace > /dev/null' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
if 'command -v reattach-to-user-namespace > /dev/null' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  Morantron/tmux-fingers           \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-copycat        \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
#run-shell /home/jdc/utils/tmux_resurect/resurrect.tmux
